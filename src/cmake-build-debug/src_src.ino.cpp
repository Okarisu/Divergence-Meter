// automatically generated by arduino-cmake
#line 1 "C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/src.ino"
#include <Arduino.h>

#line 5 "C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/cmake-build-debug/src_src.ino.cpp"
#include "Arduino.h"

//=== START Forward: C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/initTime.ino
 void setup() ;
 void setup() ;
//=== END Forward: C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/initTime.ino

//=== START Forward: C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/registr_test.ino
 void setup() ;
 void setup() ;
 void loop() ;
 void loop() ;
//=== END Forward: C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/registr_test.ino

//=== START Forward: C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/src.ino
 void setup() ;
 void setup() ;
 void loop() ;
 void loop() ;
//=== END Forward: C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/src.ino
#line 1 "C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/src.ino"


void setup() {

}

void loop() {

}

//=== START : C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/initTime.ino
#line 1 "C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/initTime.ino"
/*
Sketch to be uploaded only once to initialise time in RTC module.
Then, the src code is uploaded in arduino board, time in RTC is already set.
*/

#include <Wire.h>
#include <DS3231.h>
DS3231 rtc;
RTCDateTime dateTime;

void setup()
{

    Serial.begin(9600);
    rtc.begin();
    rtc.setDateTime(__DATE__, __TIME__);
}
//=== END : C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/initTime.ino

//=== START : C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/registr_test.ino
#line 1 "C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/registr_test.ino"
// pin připojen na RCLK registru (12)
int latchPin = 3;
//Pin connected to SRCLK registru (11)
int clockPin = 4;
////Pin připojen na Data pin registu (14)
int dataPin = 2;
 
 
void setup() {
 
  // nastaví naše piny pro regist na výstupní
  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
 
    // když dáme latchPin na LOW mužeme
    // do registru poslat data
    digitalWrite(latchPin, LOW);
   
    // a to pomocí funkce shiftOut,
    // která po bitu odešle do registru
    // hodnotu b10101010
    shiftOut(dataPin, clockPin, LSBFIRST, B11111111);
    // MSBFIRS - znamená v jakém pořádí odesílá bity
    // v tomto případě první bit je jednička
    // a v registru se objeví až na konci,
    // protože se 8x posune
    // opak bude - LSBFIRST  
   
    // jakmile dáte latchPin na HIGH,
    // data se objeví na výstupu
    digitalWrite(latchPin, HIGH);    
}
 
void loop() {
   }

//=== END : C:/Users/Toohka/Documents/.DEV/Divergence-Meter/src/registr_test.ino
